Using Sumatra to Automate the Management of Simulations
=======================================================

Andrew Davidson and Daniel Wheeler
----------------------------------

Sumatra is a lightweight system for logging the provenance data for
numerical simulations. It works particularly well for scientist that
both develop with versioning systems whilst also executing multiple
simulations. This is a common work pattern and often results in a mode
of work that mixes branching for both code development and simulation
management. Sumatra overcomes this issue by providing a light weight
system for recorrding the provenance data independently from the
versioing system used for the code development. The lightweigth design
of Sumatra enables it to fit well with an exising ad-hoc pattern of
simulation management. It also uses a straightforward Django-based
data model enabling data queries even without a Sumatra installation.



A tool such as Sumatra is an essential prerequiste for a graph-based,
data-centric workflow tool.


Daniel Wheeler will be presenting a talk entitled, "Using Sumatra to
automate the management of simulations". My goal is to disseminate the
idea of automated, simulation-centered workflow using the Python-based
Sumatra (*) tool. I will present this in the context of the MGI
initiate and discuss data-centered versus simulation-centered workflow
management. The talk will likely result in feedback from an audience
that will include many of the leaders in reproducible science and
workflow management as well as many developers of workflow tools.

How does constant small changes fit into a view of 

Challanges

 * many small changes

 * record as much provenece datat as possible.

 * resource-oriented

More often scientific dataflows are data-centric in the sense that
.... However, it is also often the case that the management is
case-centered such as for insurance claims, where millions of similar
tasks need to be executed and human interaction is required to choose
the next simulation to be run. Recording of this tasks does not fit
neatly into either a data-centric scientific workflow tool nor a
version control system. One possible way to record simulations is to
use a separate branch for each simulation, changing only a few
parameters for each simulation.

Models of computation

 - M: W x P x X -> Y

  * PN - process network

  * SDF - synchronous data flow

  * PN and SDF

  * DAG - directed acyclic graph

  * extending PN is COMAD -- collection-oriented modeling and design, 

simulation managment workflow

  resource oriented -- production workflow

  plumbing workflows

  /  


 http://www.academia.edu/300530/Scientific_Process_Automation_and_Workflow_Management

Easily adapted into alread yexisiting workflows without having to
change the way one works.
